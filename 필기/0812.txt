**for_02_문제풀이과정
1) 100부터 999까지의 숫자중 홀수 출력
	1. for문을 작성한다(x)
	1. for문을 작성+초기값100, 조건<1000, i++까지 설계
	  >>for(int=100;i<1000;i++){} >>sysout(i); 으로 출력확인
	2. 홀수를 판별한다.(x)
	2. i가 홀수인지 판단>>%연산자 활용

2) 
	1. 1부터 100까지 for문작성>>초기값: 1 조건: i<=100, i++ 
	2. 홀수판별: i값이 홀수인지 %2==1
	3. 총합: 총합으 저장할 변수선언


4) int [] arr={45, 23, 25, 64, 3, 24, 48 } 값이 짝수 출력
	1. for문을 작성한다. 
	   >>초기값: 0, 조건: <7(>>배열의 길이=arr.length), i++ 
	       i를 배열의 index로 본다.
	2. 조건: arr[i]%2==0
	3. 출력 >>sysout(arr[i]) // 값

10) 
	1. for문 작성 i=0; i<arr.length; i++;  i는 배열의 index로 보겠다.
	2. 배열에서 가장 큰 값 >> 시나리오 직접 실행
				>>가장 큰 값 정보 필요 (선언문)
	3. i의 value값과 최대값을 저장하는 변수랑 비교

12)
	1. for문으로 배열순회>> 초기값: 0; 0<배열의 길이;i++ i는 배열의 index
	2. 현재번호 : arr[i] >> 터널인지 아닌지 >>참: 카운팅(변수)
					>>거짓: cnt 초기화
	3.  제일 긴 터널의 길이를 저장 
		cnt 증가될 때마다 계속 비교
		
13) 
	1. for문으로 배열순회>> 초기값: 0; 0<배열의 길이;i++ i는 배열의 index
	2. 현재번호 : arr[i] >> 연속된 터널인지??>>현재번호와 전번호 비교를 위해 변수선언
	3. 길이갱신, 터널번호갱신

9) String test="abcdeabce"; 
	>> 선언문(자료형 변수 초기값)
	>>변수는 test, 변수는 문자열의 값, 초기문자열은 "~"
  //int, char, boolean, double, float: ".(참조)" 사용 불가능  >>원시타입
  //소문자가 아닌 대문자로 시작하는 자료형은 "." 사용가능(예외: 배열은 "." 사용가능)  >>참조타입
  //객체는 참조타입과 밀접한 관계
  //객체는 만들어진 부품. 부품에 대한 기능(메서드)과 사용방법이 있다.
  //charAt은 문자열에서 index에 해당하는 문자를 한개씩 가져오는 기능
  //객체는 변수와 메서드로 구성, class는 설계도, 객체는 건물

14) String ttt="aabbbcccaaaaddbbbaaaaa"; 
	1. 문자열의 문자를 첫번째부터 하나씩 가져온다.
	2. 연속된 터널인지??>>현재번호와 전번호 비교를 위해 변수선언
	3. 길이갱신, 터널번호갱신









	