--개발환경
IDE tools(통합개발 툴): 이클립스, vscode(개발언어: html, js, css), 인텔리J, Spring 
jdk version : 1.8버전 사용
	jdk??>>개발에 필요한 도구..import
	jre??>>소스실행 ..ctrl+f11
	라이브러리??>>scanner, random...

--이클립스 
workspace 위치체크
프로젝트 type: javaproject
	이름: JavaTu2

window>show view>여러 창들

--git
리포지토리: local, remote
remote repsitory 지정
local 형상관리대상 폴더에 git init
git config --global user.name//user.email 입력
-local과 remote를 연결시키기위해
git remote add origin(remote 이름) github url
-remote(JavaTutoorial)에서 파일들을 가져와야하므로
git fetch (리모트 변경확인)
git pull 
-branch 변경
git branch main(main branch 생성)
git checkout main(main branch로 )



우리가 공부한 것은 브랜치의 의미와 전략 (브랜치는 main)
버전관리 의미(commit의 숫자가 높을수록 최신버전)

정리
리모트 리포지토리: github 도구
로컬 리포지토리: git
	>git과 github의 차이...git은 로컬//github는 리모트
-리모트 리포지토리
	주요단어>회사입장에서 좀 더 구체적으로 말하면 프로젝트 관리 입장
		브랜치는 개발완료, 개발중, 이벤트성 코드 이런 식으로 회사에서 프로젝트 전략임
-로컬 리포지토리(개발자 입장
	개발자는 주어진 미션을 수행하기 위해서 미션별로 브랜치를 생성하고
	개발하고 푸쉬하고 최종완료되면 해당 브랜치를 삭제하기도 한다.

지금 우리가 사용하는 브랜치 기능은 자바 소스 파일 정리 프로젝트이고, 브랜치 전략은 없다.
로컬 리포지토리에서는 add//commit//push 순으로 리모트에 업로드한다.
	



--Java 2차원 배열

-1차원배열: 연속적 순서>>index
	   고정길이를 가진다.(선언문에서)>>사이즈 수정불가

int [ ]a={1,2,3,4,5};
-2차원 배열: 1차원 배열의 원소가 1차원 배열
int [ ][ ]a={  {1,2,3}   ,   {4,5,6}    }
		1	2		
6>>a[1][2]
2>>a[0][1]


-2차원배열을 행렬로 볼수 있다.
{ {1,4,1,3}, {0,2,0,2}, {0,1,2,3}, {1,1,1,3}, {3,2,1,4} }

i: 행, j: 열

i=0 // j=0,1,2,3
i=1 // j=0,1,2,3
i=2 // j=0,1,2,3
i=3 // j=0,1,2,3
j=4 // j=0,1,2,3
>>2중for문

for (int i=0;i<5;i++){
	for(int j=0;j<4;j++){
		sysout.print a[i][j];
	}
	sysout.println;
}
























