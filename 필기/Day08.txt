반복문에서 "break, continue" 키워드 사용가능
-break: 현재 반복문을 종료한다.
	반복문종료 필요시

for(int i=0;i<100;i++){
	if(i>3){
	sysout(i);
	break;	
		}
sysout('h')
}
결과: h h h h 4


-continue: 더 이상 코드를 실행x>>반복문 증감식>> 반복문 조건판별
	
for(int i=0;i<10;i++){
	if(i%2==0){
	continue;
}
sysout(i)
}
결과: 1 3 5 7 9

ex) 1부터 10까지 숫자 중 짝수의 합 (continue 한번 사용)
int sum=0;
for(int i=1;i<=10;i++){
	if(i%2==1){
	continue;
	}
	sum+=i;

}


예제)String id ="abcdefee"; //id에 알파벳 e는 금지

변수, 자료형, 값
자료형에는 	원시타입: .(참조) 사용불가, 종류: int, char, boolean, float
		참조타입: .(참조) 사용가능, 종류: String, "Random, Scanner"
>>분석결과: id는 참조자료형(문자열)-index가 있고 참조타입 
	배운 메서드: .length()- 길이, 
			.charAt(i)-매개변수의 위치의 문자리턴

String id="abcdefee";
boolean flag=false;
for(int i=0;i<id.length();i++){
	if(id.charAt(i)=='e'){
	flag=true;
	break;	
	}
}
if(flag){
	sysout('e포함됨');
	}


<암기>
-객체: class(설계도)로 객체(건물)를 만든다.
String id="abcdefee"; >> String(-class-)  id=new(-생성-) String(-객체-)("abcdefee")
객체는 부품으로 이해
객체는 변수와 메서드로 구성
변수: 값을 저장, 메서드: 기능

//id를 저장한다
문자열 부품: String(-class-)
부품을 만든다: "new" String()
		String id=new String ("");
id."length()";
id."charAt(i)";    >>>length(), charAt(i): 기능을 담당

예제)로또번호
int[] lotto=new int[6];
랜덤수를 제공하는 부품>>Random(-class-)
Random(-class-) r(-변수명-)=new(-생성-) Random()(-객체-);
r.nextInt(45)(-기능-);
사고방식: 객체>>Random객체>>class>>객체만든다>>Random 객체 중에 nextInt()라는 기능이 필요





